// <auto-generated />
using System;
using BlazorIdle.Server.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorIdle.Server.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20251004081209_AddEnemyColumnsToBattles")]
    partial class AddEnemyColumnsToBattles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("BlazorIdle.Server.Domain.Characters.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("Profession")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.BattleRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("AttackIntervalSeconds")
                        .HasColumnType("REAL");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<double>("DurationSeconds")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("EndedAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("EnemyArmor")
                        .HasColumnType("REAL");

                    b.Property<string>("EnemyId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EnemyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<double>("EnemyMagicResist")
                        .HasColumnType("REAL");

                    b.Property<int>("EnemyMaxHp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnemyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("KillTimeSeconds")
                        .HasColumnType("REAL");

                    b.Property<bool>("Killed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OverkillDamage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Seed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("SeedIndexEnd")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SeedIndexStart")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SpecialIntervalSeconds")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalDamage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.BattleSegmentRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BattleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DamageBySourceJson")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<string>("DamageByTypeJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("EndTime")
                        .HasColumnType("REAL");

                    b.Property<int>("EventCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResourceFlowJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("StartTime")
                        .HasColumnType("REAL");

                    b.Property<string>("TagCountersJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalDamage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BattleId");

                    b.ToTable("BattleSegments");
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.BattleSegmentRecord", b =>
                {
                    b.HasOne("BlazorIdle.Server.Domain.Records.BattleRecord", null)
                        .WithMany("Segments")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.BattleRecord", b =>
                {
                    b.Navigation("Segments");
                });
#pragma warning restore 612, 618
        }
    }
}
