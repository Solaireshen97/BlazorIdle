// <auto-generated />
using System;
using BlazorIdle.Server.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorIdle.Server.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20251006122640_AddCharacterGoldAndExperience")]
    partial class AddCharacterGoldAndExperience
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("BlazorIdle.Server.Domain.Characters.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Agility")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(10);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("Experience")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intellect")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(10);

                    b.Property<DateTime?>("LastOfflineSettledAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSeenAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("Profession")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stamina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(10);

                    b.Property<int>("Strength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(10);

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Characters.InventoryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId", "ItemId")
                        .IsUnique();

                    b.ToTable("inventory_items", (string)null);
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.BattleRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("AttackIntervalSeconds")
                        .HasColumnType("REAL");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DungeonId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DungeonRuns")
                        .HasColumnType("INTEGER");

                    b.Property<double>("DurationSeconds")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("EndedAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("EnemyArmor")
                        .HasColumnType("REAL");

                    b.Property<string>("EnemyId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EnemyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<double>("EnemyMagicResist")
                        .HasColumnType("REAL");

                    b.Property<int>("EnemyMaxHp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnemyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("KillTimeSeconds")
                        .HasColumnType("REAL");

                    b.Property<bool>("Killed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LootJson")
                        .HasColumnType("TEXT");

                    b.Property<int>("OverkillDamage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RewardType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Seed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("SeedIndexEnd")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SeedIndexStart")
                        .HasColumnType("INTEGER");

                    b.Property<double>("SpecialIntervalSeconds")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalDamage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.BattleSegmentRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BattleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DamageBySourceJson")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<string>("DamageByTypeJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("EndTime")
                        .HasColumnType("REAL");

                    b.Property<int>("EventCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResourceFlowJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RngIndexEnd")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RngIndexStart")
                        .HasColumnType("INTEGER");

                    b.Property<double>("StartTime")
                        .HasColumnType("REAL");

                    b.Property<string>("TagCountersJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalDamage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BattleId");

                    b.ToTable("BattleSegments");
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.EconomyEventRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BattleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdempotencyKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemsJson")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BattleId")
                        .HasFilter("BattleId IS NOT NULL");

                    b.HasIndex("CharacterId");

                    b.HasIndex("IdempotencyKey")
                        .IsUnique();

                    b.ToTable("economy_events", (string)null);
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.RunningBattleSnapshotRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnemyCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnemyId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("Profession")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Seed")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<double>("SimulatedSeconds")
                        .HasColumnType("REAL");

                    b.Property<string>("SnapshotJson")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StepBattleId")
                        .HasColumnType("TEXT");

                    b.Property<double>("TargetSeconds")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StepBattleId")
                        .IsUnique();

                    b.ToTable("RunningBattleSnapshots");
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Characters.InventoryItem", b =>
                {
                    b.HasOne("BlazorIdle.Server.Domain.Characters.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.BattleSegmentRecord", b =>
                {
                    b.HasOne("BlazorIdle.Server.Domain.Records.BattleRecord", null)
                        .WithMany("Segments")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorIdle.Server.Domain.Records.BattleRecord", b =>
                {
                    b.Navigation("Segments");
                });
#pragma warning restore 612, 618
        }
    }
}
