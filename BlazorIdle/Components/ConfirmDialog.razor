@* 确认对话框组件 - 用于防止误操作 *@
@if (Show)
{
    <div class="modal-backdrop" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 10000; display: flex; align-items: center; justify-content: center;" @onclick="OnBackdropClick">
        <div class="modal-dialog" style="background: white; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.3); max-width: 500px; width: 90%; animation: fadeIn 0.2s ease-out;" @onclick:stopPropagation="true">
            <div class="modal-header" style="padding: 16px 20px; border-bottom: 1px solid #dee2e6; display: flex; align-items: center; justify-content: space-between;">
                <h5 style="margin: 0; font-size: 18px; font-weight: 600;">@Title</h5>
                <button @onclick="OnCancelClick" 
                        style="background: none; border: none; font-size: 24px; cursor: pointer; opacity: 0.6; padding: 0; line-height: 1; color: #000;"
                        title="关闭">×</button>
            </div>
            <div class="modal-body" style="padding: 20px;">
                <p style="margin: 0; font-size: 14px; color: #333; line-height: 1.5;">@Message</p>
                @if (!string.IsNullOrEmpty(WarningText))
                {
                    <div style="margin-top: 12px; padding: 12px; background: #fff3cd; border: 1px solid #ffc107; border-radius: 4px; color: #856404;">
                        <strong>⚠ 警告：</strong> @WarningText
                    </div>
                }
            </div>
            <div class="modal-footer" style="padding: 12px 20px; border-top: 1px solid #dee2e6; display: flex; gap: 8px; justify-content: flex-end;">
                <button class="btn btn-secondary" @onclick="OnCancelClick" style="padding: 8px 16px; border-radius: 4px; border: 1px solid #6c757d; background: #6c757d; color: white; cursor: pointer; font-size: 14px;">
                    @CancelButtonText
                </button>
                <button class="@GetConfirmButtonClass()" @onclick="OnConfirmClick" style="padding: 8px 16px; border-radius: 4px; border: none; color: white; cursor: pointer; font-size: 14px; font-weight: 500;">
                    @ConfirmButtonText
                </button>
            </div>
        </div>
    </div>
}

<style>
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: scale(0.95);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .btn-danger {
        background: #dc3545;
    }
    
    .btn-danger:hover {
        background: #c82333;
    }
    
    .btn-warning {
        background: #ffc107;
        color: #000;
    }
    
    .btn-warning:hover {
        background: #e0a800;
    }
    
    .btn-primary {
        background: #007bff;
    }
    
    .btn-primary:hover {
        background: #0056b3;
    }
    
    .btn-secondary {
        background: #6c757d;
    }
    
    .btn-secondary:hover {
        background: #545b62;
    }
</style>

@code {
    /// <summary>是否显示对话框</summary>
    [Parameter]
    public bool Show { get; set; }

    /// <summary>对话框标题</summary>
    [Parameter]
    public string Title { get; set; } = "确认操作";

    /// <summary>对话框消息</summary>
    [Parameter]
    public string Message { get; set; } = "确定要执行此操作吗？";

    /// <summary>警告文本（可选）</summary>
    [Parameter]
    public string WarningText { get; set; } = "";

    /// <summary>对话框类型（danger/warning/primary）</summary>
    [Parameter]
    public DialogType Type { get; set; } = DialogType.Danger;

    /// <summary>确认按钮文本</summary>
    [Parameter]
    public string ConfirmButtonText { get; set; } = "确认";

    /// <summary>取消按钮文本</summary>
    [Parameter]
    public string CancelButtonText { get; set; } = "取消";

    /// <summary>点击背景是否关闭对话框</summary>
    [Parameter]
    public bool CloseOnBackdropClick { get; set; } = true;

    /// <summary>确认回调</summary>
    [Parameter]
    public EventCallback OnConfirm { get; set; }

    /// <summary>取消回调</summary>
    [Parameter]
    public EventCallback OnCancel { get; set; }

    /// <summary>对话框类型枚举</summary>
    public enum DialogType
    {
        Danger,
        Warning,
        Primary
    }

    /// <summary>点击确认按钮</summary>
    private async Task OnConfirmClick()
    {
        if (OnConfirm.HasDelegate)
        {
            await OnConfirm.InvokeAsync();
        }
    }

    /// <summary>点击取消按钮</summary>
    private async Task OnCancelClick()
    {
        if (OnCancel.HasDelegate)
        {
            await OnCancel.InvokeAsync();
        }
    }

    /// <summary>点击背景</summary>
    private async Task OnBackdropClick()
    {
        if (CloseOnBackdropClick)
        {
            await OnCancelClick();
        }
    }

    /// <summary>获取确认按钮样式类</summary>
    private string GetConfirmButtonClass()
    {
        return Type switch
        {
            DialogType.Danger => "btn btn-danger",
            DialogType.Warning => "btn btn-warning",
            DialogType.Primary => "btn btn-primary",
            _ => "btn btn-danger"
        };
    }
}
