@using BlazorIdle.Client.Services

@if (Enemies is not null && Enemies.Count > 0)
{
    <div class="monster-status-panel">
        <div class="panel-header">
            <strong>Êïå‰∫∫Áä∂ÊÄÅ:</strong>
            @if (ShowMonsterCount)
            {
                <span class="monster-count">[ÊÄ™Áâ©Êï∞: @Enemies.Count]</span>
            }
        </div>

        <!-- ‰∏ªË¶ÅÁõÆÊ†áÔºàÁ¨¨‰∏Ä‰∏™Êïå‰∫∫Ôºâ -->
        @if (Enemies.Count > 0)
        {
            var primaryEnemy = Enemies[0];
            <div class="primary-enemy">
                <div class="enemy-name-row">
                    <span class="enemy-icon">üéØ</span>
                    <span class="enemy-name">@primaryEnemy.EnemyName</span>
                    @if (primaryEnemy.IsDead)
                    {
                        <span class="dead-icon">üíÄ</span>
                    }
                    else if (primaryEnemy.HpPercent < 0.3)
                    {
                        <span class="low-hp-icon">üíÄ</span>
                        <span class="low-hp-text">ÊøíÊ≠ª</span>
                    }
                </div>
                <div class="hp-bar-container primary">
                    @if (primaryEnemy.IsDead)
                    {
                        <div class="hp-bar dead"></div>
                    }
                    else
                    {
                        <div class="hp-bar" style="width: @(primaryEnemy.HpPercent * 100)%;"></div>
                    }
                    <span class="hp-text">
                        @primaryEnemy.CurrentHp / @primaryEnemy.MaxHp 
                        (@(primaryEnemy.HpPercent * 100).ToString("0")%)
                    </span>
                </div>
            </div>
        }

        <!-- ÂÖ∂‰ªñÊïå‰∫∫ÂàóË°® -->
        @if (Enemies.Count > 1)
        {
            <div class="other-enemies">
                <div class="other-enemies-label">
                    ÂÖ∂‰ªñÊïå‰∫∫ (@(Enemies.Count - 1)):
                </div>
                @foreach (var enemy in Enemies.Skip(1).Take(MaxOtherEnemies))
                {
                    <div class="enemy-row">
                        <span class="enemy-name-compact">
                            @enemy.EnemyName
                            @if (enemy.IsDead)
                            {
                                <span class="dead-icon">üíÄ</span>
                            }
                            else if (enemy.HpPercent < 0.3)
                            {
                                <span class="low-hp-icon">üíÄ</span>
                            }
                        </span>
                        <div class="hp-bar-container compact">
                            @if (enemy.IsDead)
                            {
                                <div class="hp-bar dead"></div>
                            }
                            else
                            {
                                <div class="hp-bar" style="width: @(enemy.HpPercent * 100)%;"></div>
                            }
                            <span class="hp-text-compact">
                                @(enemy.HpPercent * 100).ToString("0")%
                            </span>
                        </div>
                    </div>
                }
                @if (Enemies.Count > MaxOtherEnemies + 1)
                {
                    <div class="overflow-indicator">
                        ...ËøòÊúâ @(Enemies.Count - MaxOtherEnemies - 1) ‰∏™Êïå‰∫∫
                    </div>
                }
            </div>
        }
    </div>
}

<style>
    .monster-status-panel {
        background: #fff5f5;
        border: 1px solid #ffcccc;
        border-radius: 8px;
        padding: 12px;
        margin-bottom: 12px;
    }

    .panel-header {
        margin-bottom: 12px;
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .monster-count {
        color: #666;
        font-size: 13px;
        font-weight: normal;
    }

    .primary-enemy {
        background: #fff;
        border: 2px solid #f44336;
        border-radius: 6px;
        padding: 10px;
        margin-bottom: 12px;
    }

    .enemy-name-row {
        display: flex;
        align-items: center;
        gap: 6px;
        margin-bottom: 6px;
        font-size: 14px;
    }

    .enemy-icon {
        font-size: 16px;
    }

    .enemy-name {
        font-weight: bold;
        color: #d32f2f;
    }

    .dead-icon {
        color: #999;
        font-size: 14px;
    }

    .low-hp-icon {
        color: #ff9800;
        font-size: 14px;
    }

    .low-hp-text {
        color: #ff9800;
        font-size: 11px;
        font-weight: bold;
    }

    .hp-bar-container {
        background: #e0e0e0;
        border-radius: 3px;
        overflow: hidden;
        position: relative;
    }

    .hp-bar-container.primary {
        height: 20px;
    }

    .hp-bar-container.compact {
        height: 16px;
        flex: 1;
    }

    .hp-bar {
        background: linear-gradient(90deg, #f44336, #e57373);
        height: 100%;
        transition: width 0.3s;
    }

    .hp-bar.dead {
        background: #999;
        width: 0%;
    }

    .hp-text {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        color: #000;
        font-weight: bold;
        font-size: 11px;
    }

    .hp-text-compact {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        color: #000;
        font-size: 10px;
        font-weight: 600;
    }

    .other-enemies {
        background: #fafafa;
        border: 1px solid #e0e0e0;
        border-radius: 4px;
        padding: 8px;
    }

    .other-enemies-label {
        font-size: 12px;
        font-weight: 600;
        margin-bottom: 6px;
        color: #666;
    }

    .enemy-row {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 4px;
    }

    .enemy-row:last-child {
        margin-bottom: 0;
    }

    .enemy-name-compact {
        min-width: 140px;
        font-size: 12px;
        color: #333;
        display: flex;
        align-items: center;
        gap: 4px;
    }

    .overflow-indicator {
        font-size: 11px;
        color: #999;
        margin-top: 4px;
        text-align: center;
    }
</style>

@code {
    [Parameter]
    public List<EnemyHealthStatusDto>? Enemies { get; set; }

    [Parameter]
    public bool ShowMonsterCount { get; set; } = true;

    [Parameter]
    public int MaxOtherEnemies { get; set; } = 4;
}
